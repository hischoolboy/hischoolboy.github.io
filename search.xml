<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[GIT常用操作记录]]></title>
      <url>/2017/06/29/GIT%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<h2 id="批量更新目录下所有仓库"><a href="#批量更新目录下所有仓库" class="headerlink" title="批量更新目录下所有仓库"></a>批量更新目录下所有仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="keyword">for</span> dir <span class="keyword">in</span> $(ls <span class="_">-d</span> */)</div><div class="line"><span class="keyword">do</span></div><div class="line">  <span class="keyword">if</span> [ <span class="_">-d</span> <span class="string">"<span class="variable">$dir</span>"</span>/.git ]; <span class="keyword">then</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$dir</span>"</span> &amp;&amp; <span class="built_in">cd</span> <span class="string">"<span class="variable">$dir</span>"</span> &amp;&amp; git pull &amp;&amp; <span class="built_in">cd</span> ..</div><div class="line">  <span class="keyword">fi</span></div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<h2 id="查看、添加、提交、删除、找回，重置修改文件"><a href="#查看、添加、提交、删除、找回，重置修改文件" class="headerlink" title="查看、添加、提交、删除、找回，重置修改文件"></a>查看、添加、提交、删除、找回，重置修改文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">help</span> &lt;<span class="built_in">command</span>&gt; <span class="comment"># 显示command的help</span></div><div class="line"></div><div class="line">git show <span class="comment"># 显示某次提交的内容 git show $id</span></div><div class="line"></div><div class="line">git co -- &lt;file&gt; <span class="comment"># 抛弃工作区修改</span></div><div class="line"></div><div class="line">git co . <span class="comment"># 抛弃工作区修改</span></div><div class="line"></div><div class="line">git add &lt;file&gt; <span class="comment"># 将工作文件修改提交到本地暂存区</span></div><div class="line"></div><div class="line">git add . <span class="comment"># 将所有修改过的工作文件提交暂存区</span></div><div class="line"></div><div class="line">git rm &lt;file&gt; <span class="comment"># 从版本库中删除文件</span></div><div class="line"></div><div class="line">git rm &lt;file&gt; --cached <span class="comment"># 从版本库中删除文件，但不删除文件</span></div><div class="line"></div><div class="line">git reset &lt;file&gt; <span class="comment"># 从暂存区恢复到工作文件</span></div><div class="line"></div><div class="line">git reset -- . <span class="comment"># 从暂存区恢复到工作文件</span></div><div class="line"></div><div class="line">git reset --hard <span class="comment"># 恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改</span></div><div class="line"></div><div class="line">git ci &lt;file&gt; git ci . git ci <span class="_">-a</span> <span class="comment"># 将git add, git rm和git ci等操作都合并在一起做　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　git ci -am "some comments"</span></div><div class="line"></div><div class="line">git ci --amend <span class="comment"># 修改最后一次提交记录</span></div><div class="line"></div><div class="line">git revert &lt;<span class="variable">$id</span>&gt; <span class="comment"># 恢复某次提交的状态，恢复动作本身也创建次提交对象</span></div><div class="line"></div><div class="line">git revert HEAD <span class="comment"># 恢复最后一次提交的状态</span></div></pre></td></tr></table></figure>
<h3 id="查看文件diff"><a href="#查看文件diff" class="headerlink" title="查看文件diff"></a>查看文件diff</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">git diff &lt;file&gt; <span class="comment"># 比较当前文件和暂存区文件差异 git diff</span></div><div class="line"></div><div class="line">git diff &lt;id1&gt;&lt;id1&gt;&lt;id2&gt; <span class="comment"># 比较两次提交之间的差异</span></div><div class="line"></div><div class="line">git diff &lt;branch1&gt;..&lt;branch2&gt; <span class="comment"># 在两个分支之间比较</span></div><div class="line"></div><div class="line">git diff --staged <span class="comment"># 比较暂存区和版本库差异</span></div><div class="line"></div><div class="line">git diff --cached <span class="comment"># 比较暂存区和版本库差异</span></div><div class="line"></div><div class="line">git diff --stat <span class="comment"># 仅仅比较统计信息</span></div></pre></td></tr></table></figure>
<h2 id="查看提交记录"><a href="#查看提交记录" class="headerlink" title="查看提交记录"></a>查看提交记录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">log</span> git <span class="built_in">log</span> &lt;file&gt; <span class="comment"># 查看该文件每次提交记录</span></div><div class="line"></div><div class="line">git <span class="built_in">log</span> -p &lt;file&gt; <span class="comment"># 查看每次详细修改内容的diff</span></div><div class="line"></div><div class="line">git <span class="built_in">log</span> -p -2 <span class="comment"># 查看最近两次详细修改内容的diff</span></div><div class="line"></div><div class="line">git <span class="built_in">log</span> --stat <span class="comment">#查看提交统计信息</span></div></pre></td></tr></table></figure>
<h3 id="Mac上可以使用tig代替diff和log，brew-install-tig"><a href="#Mac上可以使用tig代替diff和log，brew-install-tig" class="headerlink" title="Mac上可以使用tig代替diff和log，brew install tig"></a>Mac上可以使用tig代替diff和log，brew install tig</h3><h2 id="Git本地分支管理"><a href="#Git本地分支管理" class="headerlink" title="Git本地分支管理"></a>Git本地分支管理</h2><h3 id="查看、切换、创建和删除分支"><a href="#查看、切换、创建和删除分支" class="headerlink" title="查看、切换、创建和删除分支"></a>查看、切换、创建和删除分支</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">git br -r <span class="comment"># 查看远程分支</span></div><div class="line"></div><div class="line">git br &lt;new_branch&gt; <span class="comment"># 创建新的分支</span></div><div class="line"></div><div class="line">git br -v <span class="comment"># 查看各个分支最后提交信息</span></div><div class="line"></div><div class="line">git br --merged <span class="comment"># 查看已经被合并到当前分支的分支</span></div><div class="line"></div><div class="line">git br --no-merged <span class="comment"># 查看尚未被合并到当前分支的分支</span></div><div class="line"></div><div class="line">git co &lt;branch&gt; <span class="comment"># 切换到某个分支</span></div><div class="line"></div><div class="line">git co -b &lt;new_branch&gt; <span class="comment"># 创建新的分支，并且切换过去</span></div><div class="line"></div><div class="line">git co -b &lt;new_branch&gt; &lt;branch&gt; <span class="comment"># 基于branch创建新的new_branch</span></div><div class="line"></div><div class="line">git co <span class="variable">$id</span> <span class="comment"># 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除</span></div><div class="line"></div><div class="line">git co <span class="variable">$id</span> -b &lt;new_branch&gt; <span class="comment"># 把某次历史提交记录checkout出来，创建成一个分支</span></div><div class="line"></div><div class="line">git br <span class="_">-d</span> &lt;branch&gt; <span class="comment"># 删除某个分支</span></div><div class="line"></div><div class="line">git br -D &lt;branch&gt; <span class="comment"># 强制删除某个分支 (未被合并的分支被删除的时候需要强制)</span></div></pre></td></tr></table></figure>
<h3 id="分支合并和rebase"><a href="#分支合并和rebase" class="headerlink" title="分支合并和rebase"></a>分支合并和rebase</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git merge &lt;branch&gt; <span class="comment"># 将branch分支合并到当前分支</span></div><div class="line"></div><div class="line">git merge origin/master --no-ff <span class="comment"># 不要Fast-Foward合并，这样可以生成merge提交</span></div><div class="line"></div><div class="line">git rebase master &lt;branch&gt; <span class="comment"># 将master rebase到branch，相当于： git co &lt;branch&gt; &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge &lt;branch&gt;</span></div></pre></td></tr></table></figure>
<h3 id="Git补丁管理-方便在多台机器上开发同步时用"><a href="#Git补丁管理-方便在多台机器上开发同步时用" class="headerlink" title="Git补丁管理(方便在多台机器上开发同步时用)"></a>Git补丁管理(方便在多台机器上开发同步时用)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git diff &gt; ../sync.patch <span class="comment"># 生成补丁</span></div><div class="line"></div><div class="line">git apply ../sync.patch <span class="comment"># 打补丁</span></div><div class="line"></div><div class="line">git apply --check ../sync.patch <span class="comment">#测试补丁能否成功</span></div></pre></td></tr></table></figure>
<h3 id="Git暂存管理"><a href="#Git暂存管理" class="headerlink" title="Git暂存管理"></a>Git暂存管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">git stash <span class="comment"># 暂存</span></div><div class="line"></div><div class="line">git stash list <span class="comment"># 列所有stash</span></div><div class="line"></div><div class="line">git stash apply <span class="comment"># 恢复暂存的内容</span></div><div class="line"></div><div class="line">git stash drop <span class="comment"># 删除暂存区</span></div></pre></td></tr></table></figure>
<h3 id="Git远程分支管理"><a href="#Git远程分支管理" class="headerlink" title="Git远程分支管理"></a>Git远程分支管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">git pull <span class="comment"># 抓取远程仓库所有分支更新并合并到本地</span></div><div class="line"></div><div class="line">git pull --no-ff <span class="comment"># 抓取远程仓库所有分支更新并合并到本地，不要快进合并</span></div><div class="line"></div><div class="line">git fetch origin <span class="comment"># 抓取远程仓库更新</span></div><div class="line"></div><div class="line">git merge origin/master <span class="comment"># 将远程主分支合并到本地当前分支</span></div><div class="line"></div><div class="line">git co --track origin/branch <span class="comment"># 跟踪某个远程分支创建相应的本地分支</span></div><div class="line"></div><div class="line">git co -b &lt;local_branch&gt; origin/&lt;remote_branch&gt; <span class="comment"># 基于远程分支创建本地分支，功能同上</span></div><div class="line"></div><div class="line">git push <span class="comment"># push所有分支</span></div><div class="line"></div><div class="line">git push origin master <span class="comment"># 将本地主分支推到远程主分支</span></div><div class="line"></div><div class="line">git push -u origin master <span class="comment"># 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)</span></div><div class="line"></div><div class="line">git push origin &lt;local_branch&gt; <span class="comment"># 创建远程分支， origin是远程仓库名</span></div><div class="line"></div><div class="line">git push origin &lt;local_branch&gt;:&lt;remote_branch&gt; <span class="comment"># 创建远程分支</span></div><div class="line"></div><div class="line">git push origin :&lt;remote_branch&gt; <span class="comment">#先删除本地分支(git br -d &lt;branch&gt;)，然后再push删除远程分支</span></div></pre></td></tr></table></figure>
<h3 id="Git远程仓库管理"><a href="#Git远程仓库管理" class="headerlink" title="Git远程仓库管理"></a>Git远程仓库管理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">git remote -v <span class="comment"># 查看远程服务器地址和仓库名称</span></div><div class="line"></div><div class="line">git remote show origin <span class="comment"># 查看远程服务器仓库状态</span></div><div class="line"></div><div class="line">git remote add origin git@ github:robbin/robbin_site.git <span class="comment"># 添加远程仓库地址</span></div><div class="line"></div><div class="line">git remote <span class="built_in">set</span>-url origin git@ github.com:robbin/robbin_site.git <span class="comment"># 设置远程仓库地址(用于修改远程仓库地址) git remote rm &lt;repository&gt; # 删除远程仓库</span></div></pre></td></tr></table></figure>
<h3 id="创建远程仓库"><a href="#创建远程仓库" class="headerlink" title="创建远程仓库"></a>创建远程仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> --bare robbin_site robbin_site.git <span class="comment"># 用带版本的项目创建纯版本仓库</span></div><div class="line"></div><div class="line">scp -r my_project.git git@ git.csdn.net:~ <span class="comment"># 将纯仓库上传到服务器上</span></div><div class="line"></div><div class="line">mkdir robbin_site.git &amp;&amp; <span class="built_in">cd</span> robbin_site.git &amp;&amp; git --bare init <span class="comment"># 在服务器创建纯仓库</span></div><div class="line"></div><div class="line">git remote add origin git@ github.com:robbin/robbin_site.git <span class="comment"># 设置远程仓库地址</span></div><div class="line"></div><div class="line">git push -u origin master <span class="comment"># 客户端首次提交</span></div><div class="line"></div><div class="line">git push -u origin develop <span class="comment"># 首次将本地develop分支提交到远程develop分支，并且track</span></div><div class="line"></div><div class="line">git remote <span class="built_in">set</span>-head origin master <span class="comment"># 设置远程仓库的HEAD指向master分支</span></div></pre></td></tr></table></figure>
<h3 id="也可以命令设置跟踪远程库和本地库"><a href="#也可以命令设置跟踪远程库和本地库" class="headerlink" title="也可以命令设置跟踪远程库和本地库"></a>也可以命令设置跟踪远程库和本地库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git branch --set-upstream master origin/master</div><div class="line"></div><div class="line">git branch --set-upstream develop origin/develop</div></pre></td></tr></table></figure>]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Java基础笔记之多线程]]></title>
      <url>/2017/06/26/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%A4%9A%E7%BA%BF%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1><h2 id="1、进程和线程的概念"><a href="#1、进程和线程的概念" class="headerlink" title="1、进程和线程的概念"></a>1、进程和线程的概念</h2><p>当一个程序进入内存运行时，即变成一个进程（Process）。进程是系统进行资源分配和调度的一个独立单位。—— 进程三特征：<br><a id="more"></a></p>
<ul>
<li><strong>独立性</strong>：进程是系统中独立存在的实体，拥有自己独立的资源和地址空间；</li>
<li><strong>动态性</strong>：进程与程序的区别在于，程序只是一个静态的指令集合，而进程是一个正在系统中执行的指令集合，进程具有自己的生命周期和状态；</li>
<li><strong>并发性</strong>：多个进程可以在单个处理器上并发执行，互不影响。（与<strong>并行</strong>不是一个概念）</li>
</ul>
<p>线程（Thread）是进程的执行单元，独立、并发的执行流，被称为轻量级进程。</p>
<ul>
<li>线程可以拥有自己的堆栈、自己的程序计数器、自己的局部变量，但不拥有系统资源</li>
<li>一个进程中可以有多个线程，它们共享该进程的全部资源</li>
<li>多个线程并发地执行</li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/05/06/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
